syntax ="proto3";

package user;

option go_package = "./proto";

message User {
    string id = 1;
    string name = 2;
    string username = 3;
    string email = 4;
    string password = 5;
    string profile_image = 6;
}

message UserRequest {
    string user_id = 1;
}

message UserResponse {
    User user = 1;
}

message CreateUserRequest {
    string name = 1;
    string username = 2;
    string email = 3;
    string password = 4;
}

message CreateUserResponse {
    User user = 1;
}

message UpdateUserRequest {
    string user_id = 1;
    string name = 2;
    string username = 3;
    string email = 4;
    string password = 5;
    string profile_image = 6;
}

message UpdateUserResponse {
    User user = 1;
}

message DeleteUserRequest {
    string user_id = 1;
}

message DeleteUserResponse {
    bool success = 1;
    string message = 2;
}

message RegisterRequest {
    string name = 1;
    string username = 2;
    string email = 3;
    string password = 4;
}

message RegisterResponse {
    User user = 1;
}

message LoginRequest {
    string email = 1;
    string password = 2;
}

message LoginResponse {
    string token = 1;
}

message ValidateTokenRequest {
    string token = 1;
}

message ValidateTokenResponse {
    bool is_valid = 1;
    User user = 2;
}

message LogoutRequest {
    string token = 1;
}

message LogoutResponse {
    bool success = 1;
    string message = 2;
}

service UserService {
    rpc GetUser(UserRequest) returns (UserResponse);
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);

    rpc Register(RegisterRequest) returns (RegisterResponse);
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse);
    rpc Logout(LogoutRequest) returns (LogoutResponse);
}